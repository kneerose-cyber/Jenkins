serveres less

monolith - singe artitecture (ui,backend, db, pw and email - tighly coupled) all service will go down if any changes.
microservices - amazon.com (frontend, backed and db seperate but communicate. ) -high scalable. 
serverless - don't have to maanage just deploy app and aws take care of scalable.


serverless framework. 
serverless.com 

 CloudFormation is tightly integrated with AWS and provides native support for AWS services, while Terraform offers multi-cloud support and a flexible, extensible language for defining infrastructure. The choice between them often depends on factors such as the specific cloud environment, existing skill sets, and project requirements.

cloudformation - serverless uses cloudformation, include yaml, aws librabries. 
CloudFormation is a service provided by AWS (Amazon Web Services) that allows you to define and provision AWS infrastructure as code using templates. With CloudFormation, you can create and manage a collection of AWS resources in a consistent and predictable manner.

serverless uses cloudformation as infra as code. 

To deploy app serveless user yanl, aws libraries, node js etc

 HQ (starting point -ec2 )-> cloud formation makes below infrastructue. , IAM roles
        User request -> api gateway -> lamda function -> code from s3 -> lamda function -> insert in dynamo db and retieve from dyanmo db 
          lamda -> logs  to cloud watch 

steps 
 create ec2 instance (starting point to control project)


go to serverless.com (sign up, will require when using ec2 serverless to run on the serverless site.)
 click on setup and install serverless using npm install on created ec2 instances. 
 install node js, npm and do serveless , might need to install nvm(fix node js version)
 npm install -g serveless

 website, look for examples and turtorials 
now $serverless
        AWS -Python - HTTP API 
         framework - yes
         deploy - NO.

    open the folder and check README.md , handler.py, serveless.yml  (evetns httpAPI) path: /hello   trigger website /hello trigger lamda function

    serverless deploy ( it will fail , need to create IAM user -testing administrative access) create access key and now setup aws CLI setup - aws configure

    now you can deploy serverless deploy 

    go to serveless.com  go to provider and aws provider (access/secret key)

    now serverless deploy 

    you should get endpoint https://*/hello (It sud return what lamda function had)
    play with yaml, crrate 2 lamda function and do serverless deploy


    sls deploy cmd ()

    project create Dyanmo db, insert, delete, update. 

    cloudformation - stacks - view in designer (it willl show aerrtitecture diagram)

    serverless remove




  - qpress
    - socat
    - percona-xtradb-cluster
    - percona-release-1.0-27.noarch
    - percona-xtrabackup-80


